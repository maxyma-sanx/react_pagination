{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","allPages","i","push","slice","Math","ceil","length","getNumberOfPages","elementsOnPage","startElement","endElement","min","getNumberOfElements","isFirstPage","isLastPage","max","className","classNames","disabled","href","onClick","page","map","active","onPageLinkClick","element","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","id","onChange","e","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2NAuCaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EApCiB,SACvBJ,EACAC,GAIA,IAFA,IAAMI,EAAqB,GAElBC,EAAI,EAAGA,GAAKN,EAAOM,GAAK,EAC/BD,EAASE,KAAKD,GAGhB,OAAOD,EAASG,MAAM,EAAGC,KAAKC,KAAKL,EAASM,OAASV,IA0BlCW,CAAiBZ,EAAOC,GACrCY,EAxBoB,SAC1BX,EACAD,EACAD,GAOA,IALA,IAAMa,EAA2B,GAE3BC,GAAgBZ,EAAc,GAAKD,EAAU,EAC7Cc,EAAaN,KAAKO,IAAId,EAAcD,EAASD,GAE1CM,EAAIQ,EAAcR,GAAKS,EAAYT,GAAK,EAC/CO,EAAeN,KAAKD,GAGtB,OAAOO,EAUgBI,CAAoBf,EAAaD,EAASD,GAC3DkB,EAA8B,IAAhBhB,EACdiB,EAAajB,IAAgBO,KAAKW,IAAL,MAAAX,KAAI,YAAQL,IAoB/C,OACE,qCACE,qBAAIiB,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAzBMC,EAyBgBxB,OAxBlCgB,GACHf,EAAauB,EAAO,IAFA,IAACA,GAoBjB,oBAUDtB,EAAWuB,KAAI,SAAAD,GAAI,OAClB,oBAEEL,UAAWC,IACT,YACA,CAAEM,OAAQF,IAASxB,IAJvB,SAOE,mBACE,UAAQ,WACRmB,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAhDG,SAACC,GACnBA,IAASxB,GACXC,EAAauB,GA8CUG,CAAgBH,IAJjC,SAMGA,KAZEA,MAgBT,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBApDMC,EAoDgBxB,OAnDlCiB,GACHhB,EAAauB,EAAO,IAFA,IAACA,GA+CjB,uBAWJ,6BACGb,EAAec,KAAI,SAAAG,GAAO,OACzB,oBAAkB,UAAQ,OAA1B,wBAA0CA,IAAjCA,YCpHbC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQ3B,KAAK4B,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrC,EAAP,KAAgBsC,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpC,EAAP,KAAoBsC,EAApB,KAEM1B,GAAgBZ,EAAc,GAAKD,EAAU,EAC7Cc,EAAaN,KAAKO,IAAId,EAAcD,EAAS8B,EAAMpB,QAEzD,OACE,sBAAKU,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWnB,EADX,mBACiCY,EADjC,cACmDC,EADnD,eACoEgB,EAAMpB,OAD1E,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,SAAU,SAACC,GACTJ,GAAYI,EAAEC,OAAOC,OACrBL,EAAe,IAEjBK,MAAO5C,EART,UAUE,wBAAQ4C,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACErB,MAAO+B,EAAMpB,OACbV,QAASA,EACTC,YAAaA,EACbC,aAAcqC,QEhDtBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b0a16e2.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nconst getNumberOfPages = (\n  total: number,\n  perPage: number,\n): number[] => {\n  const allPages: number[] = [];\n\n  for (let i = 1; i <= total; i += 1) {\n    allPages.push(i);\n  }\n\n  return allPages.slice(0, Math.ceil(allPages.length / perPage));\n};\n\nconst getNumberOfElements = (\n  currentPage: number,\n  perPage: number,\n  total: number,\n): number[] => {\n  const elementsOnPage: number[] = [];\n\n  const startElement = (currentPage - 1) * perPage + 1;\n  const endElement = Math.min(currentPage * perPage, total);\n\n  for (let i = startElement; i <= endElement; i += 1) {\n    elementsOnPage.push(i);\n  }\n\n  return elementsOnPage;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = getNumberOfPages(total, perPage);\n  const elementsOnPage = getNumberOfElements(currentPage, perPage, total);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === Math.max(...totalPages);\n\n  const onPageLinkClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const onPrevLinkClick = (page: number) => {\n    if (!isFirstPage) {\n      onPageChange(page - 1);\n    }\n  };\n\n  const onNextLinkClick = (page: number) => {\n    if (!isLastPage) {\n      onPageChange(page + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => onPrevLinkClick(currentPage)}\n          >\n            «\n          </a>\n        </li>\n        {totalPages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageLinkClick(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => onNextLinkClick(currentPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {elementsOnPage.map(element => (\n          <li key={element} data-cy=\"item\">{`Item ${element}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startElement = (currentPage - 1) * perPage + 1;\n  const endElement = Math.min(currentPage * perPage, items.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startElement} - ${endElement} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}